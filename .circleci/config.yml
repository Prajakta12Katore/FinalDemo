# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn dependency:go-offline # gets the project dependencies

      - run:
          name: Install
          command: mvn clean install
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
          
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          path: test-output/testng-results.xml

      - run:
          name: Get API token
          command: |
            echo export token=$(curl -H "Content-Type: application/json" -X POST --data '{ "client_id": "{8725681B95A9466980CDB5804AE5D7F9}","client_secret": "{94dedce99394e4779c0bcb83f2e770b9f12eed1f614bce46f1c84e3638461e44}"}'
            source $BASH_ENV

      - run : curl -H "Content-Type:text/xml" -X POST -H "Authorization:Bearer $token"  --data @test-output/testng-results.xml https://xray.cloud.getxray.app/api/v1/import/execution/testng?projectKey=DEM 
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
